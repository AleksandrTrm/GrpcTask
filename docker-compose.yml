services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: ./src/Server/Dockerfile
    environment:
      - BUILD_CONFIGURATION=Development
    ports:
      - 5001:5001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5001" ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      grcp-postgres:
        condition: service_healthy
      grpc-seq:
        condition: service_started

  client:
    container_name: client
    build:
      context: .
      dockerfile: ./src/ConsoleClient/Dockerfile
    ports:
      - 5064:5064
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      server:
        condition: service_started

  grcp-postgres:
    image: postgres:16
    container_name: grcp-postgres
    restart: always
    environment:
      POSTGRES_DB: grcp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - 5434:5432
    volumes:
      - grcp-postgres-data:/var/lib/postgresql/data

  grpc-seq:
    image: datalust/seq:latest
    container_name: grpc_seq
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5431:5431
      - 8090:80

volumes:
  grcp-postgres-data:
